library(lubridate)
my_date <- ymd("2015-01-01")
str(my_date)
my_date <- ymd(paste("2015", "01", "01", sep = "-"))
str(my_date)
paste(surveys$year, surveys$month, surveys$day, sep = "-")
ymd(paste(surveys$year, surveys$month, surveys$day, sep = "-"))
surveys$date <- ymd(paste(surveys$year, surveys$month, surveys$day, sep = "-"))
str(surveys)
summary(surveys$date)
head(surveys[is.na(surveys$date), c("year","month","day")])
?readxl
readxl(my_data.xlsx)
library(tidyverse)
library("tidyverse")
install.packages("tidyverse")
readxl(my_data.xlsx)
library(tidyverse)
library(readxl)
read.csv(my_data.csv)
read.csv("my_data.csv")
read.csv("/home/kristina/data_science/my_data.csv")
read.csv("c:/home/kristina/data_science/my_data.csv")
read.csv(file = "c:/home/kristina/data_science/my_data.csv")
my_data <- read.csv(file = "c:/home/kristina/data_science/my_data.csv")
read.csv("c:/home/kristina/data_science/data/my_data.csv")
read.csv("C:/home/kristina/data_science/data/my_data.csv")
read.csv("c:/home/kristina/data_science/data/my_data.csv")
read.xlsx("c:/home/kristina/data_science/data/my_data.xlsx")
install.packages("readxl")
install.packages("readxl")
my_xl_data <- read.xlsx("c:/home/kristina/data_science/data
/my_data.xlsx")
install.packages(readxl)
install.packages("readxl")
read.xlsx(something)
?? read xl
?? read
library("readxl")
library(readxl)
library("readxl")
library(readxl)
read.xlsx(something)
?remove.packages
library(readxl)
read.xlsx("something")
read_xlsx("something")
my_xl_data <- read_xlsx("c:/home/kristina/data_science/data/my_data.xlsx")
my_xl_data <- read_xlsx("c:/home/kristina/data_science
/data/my_data.xlsx")
?read_xlsx
my_xl_data <- read_excel("c:/home/kristina/data_science
/data/my_data.xlsx")
?setwd
setwd("c:home/kristina/data_science/data")
read_excel("D:/home/kristina/data_science/data/my_data.xlsx")
read_excel("/home/kristina/data_science/data/my_data.xlsx")
my_xl_data <- read_excel("/home/kristina/data_science
/data/my_data.xlsx")
read_excel("/home/kristina/data_science/data/my_data.xlsx")
my_xl_data <- read_excel("/home/kristina/data_science/data/my_data.xlsx")
my_csv_data <- read.csv("/home/kristina/data_science/data/my_data.csv")
head(my_xl_data)
head(my_csv_data)
mtcars
rownames(mtcars)
mtcars$Model <- rownames(mtcars)
head(mtcars)
mtcars
tail(mtcars)
another_car <- data.frame(Model, mpg, awesomeness)
another_car <- data.frame("Model", "mpg", "awesomeness")
another_car
another_car[1,] <- ("Fizzywig", 31.415, 11)
another_car[1,] <- (Fizzywig, 31.415, 11)
another_car
another_car$Model <- "Fizzywig"
another_car
Model <- Fizzywig
Model <- "Fizzywig"
mpg <- 31.415
awesomeness <- 11
another_car <- data.frame("Model", "mpg" , "awesomeness")
another_car
another_car <- data.frame(Model, mpg , awesomeness)
another_car
?rbind
?bind_rows
all_cars <- rbind(mtcars, another_car)
library(dplyr)
bind_rows(another_car, mtcars)
mtcars$Model <- rownames(mtcars)
head(mtcars)
bind_rows(another_car, mtcars)
Model <- "Fizzywig"
mpg <- 31.415
awesomeness <- 11
another_car <- data.frame(Model, mpg , awesomeness)
all_cars <- rbind(mtcars, another_car)
library(dplyr)
bind_rows(another_car, mtcars)
mtcars$Model <- rownames(mtcars)
head(mtcars)
bind_rows(another_car, mtcars)
Model <- "Fizzywig"
mpg <- 31.415
awesomeness <- 11
another_car <- data.frame(Model, mpg , awesomeness)
mtcars$Model <- rownames(mtcars)
head(mtcars)
all_cars <- rbind(mtcars, another_car)
mtcars$Model <- rownames(mtcars)
head(mtcars)
Model <- "Fizzywig"
mpg <- 31.415
awesomeness <- 11
another_car <- data.frame(Model, mpg , awesomeness)
all_cars <- rbind(mtcars, another_car)
bind_rows(another_car, mtcars)
install.packages("ggplot2")
install.packages("RColorBrewer")
install.packages("viridis")
setwd("~/Documents/data_science/data")
library(ggplot2)
library(viridis)
library(RColorBrewer)
library(readr)
?read_scv
?read_csv
setwd("~/Documents/data_science/data")
setwd("~/Documents/data_science/data")
setwd("~/Documents/data_science/data")
?scale_color_brewer
?brewer.pal
?scale_color_brewer
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
library(dplyr)
library(stringr)
# Note that I'm using data_frame() from the dplyr package to make my data.frame!
counties <- data_frame(counties = c('MA, 25, 001, Barnstable County, H1',
'MA, 25, 003, Berkshire County, H4',
'MA, 25, 005, Bristol County, H1',
'MA, 25, 007, Dukes County, H1',
'MA, 25, 009, Essex County, H4',
'MA, 25, 011, Franklin County, H4',
'MA, 25, 013, Hampden County, H4',
'MA, 25, 015, Hampshire County, H4',
'MA, 25, 017, Middlesex County, H4',
'MA, 25, 019, Nantucket County, H4',
'MA, 25, 021, Norfolk County, H1',
'MA, 25, 023, Plymouth County, H1',
'MA, 25, 025, Suffolk County, H4',
'MA, 25, 027, Worcester County, H4',
'VA, 51, 193, Westmoreland County, H1',
'VA, 51, 195, Wise County, H1',
'VA, 51, 197, Wythe County, H1',
'VA, 51, 199, York County, H1',
'VA, 51, 510, Alexandria city, C7',
'VA, 51, 515, Bedford city, C7',
'VA, 51, 520, Bristol city, C7',
'VA, 51, 530, Buena Vista city, C7',
'VA, 51, 540, Charlottesville city, C7',
'VA, 51, 550, Chesapeake city, C7',
'VA, 51, 570, Colonial Heights city, C7'
))
dna_seqs <- data_frame(seq =c('ATG CAA TGG GGA AAT GGT ACC AGG TCC GAA CTT AAT GAG GTA AGA CAG ATT TAA',
'A TGC AAT GGG GAA ATG TTA CCA GGT CCG AAC TTA TTG AGG TAA GAC AGA TTT AA',
'AT GCA ATG GGG AAA TGT TAC CAG GTC CGA ACT TAT TAA GGT AAG ACA GAT TTA A'))
View(counties)
h_counties <- counties %>%
filter(str_detect(counties, "h"))
View(h_counties)
2_counties <- counties %>%
filter(str_detect(counties, "^(2..|.2.|2..)"))
2counties <- counties %>%
filter(str_detect(counties, "^(2..|.2.|2..)"))
number_counties <- counties %>%
filter(str_detect(counties, "^(2..|.2.|2..)"))
View(number_counties)
number_counties <- counties %>%
filter(str_detect(counties, "2"))
View(number_counties)
number_counties <- counties %>%
filter(str_detect(counties, "[..2]"))
number_counties <- counties %>%
filter(str_detect(counties, "(..2)"))
View(number_counties)
View(number_counties)
number_counties <- counties %>%
filter(str_detect(counties, "(..2)"))
number_counties <- counties %>%
filter(str_detect(counties, "(..2)[^\s]"))
number_counties <- counties %>%
filter(str_detect(counties, "^(..2)$"))
View(number_counties)
number_counties <- counties %>%
filter(str_detect(counties, "^(..2|.2.|2..)$"))
number_counties <- counties %>%
filter(str_detect(counties, "(..2|.2.|2..)"))
number_counties <- counties %>%
filter(str_detect(counties, ".2."))
View(number_counties)
number_counties <- counties %>%
filter(str_detect(counties, "(\d2\d"))
number_counties <- counties %>%
filter(str_detect(counties, "(\\d2\\d"))
number_counties <- counties %>%
filter(str_detect(counties, "(\\d2\\d)")
number_counties <- counties %>%
filter(str_detect(counties, "(\\d2\\d)"))
number_counties <- counties %>%
filter(str_detect(counties, "2"))
number_counties <- counties %>%
filter(str_detect(counties, ".2"))
number_counties <- counties %>%
filter(str_detect(counties, "\\s.2."))
View(number_counties)
number_counties <- counties %>%
filter(str_detect(counties, "\\s(.2.|2..|..2)"))
number_counties <- counties %>%
filter(str_detect(counties, "((.2.)|(2..)|(..2)"))
number_counties <- counties %>%
filter(str_detect(counties, "((.2.)|(2..)|(..2)")))
number_counties <- counties %>%
filter(str_detect(counties, "((.2.)|(2..)|(..2))")
number_counties <- counties %>%
filter(str_detect(counties, "((.2.)|(2..)|(..2))"))
(str_detect(counties, "((.2.)|(2..)|(..2))"))
(str_subset(counties, "((.2.)|(2..)|(..2))"))
(str_subset(counties, ".........[..2]"))
(str_subset(counties, "........[..2]"))
(str_subset(counties, ".2."))
(str_subset(counties, "\\s.2."))
(str_subset(counties, "\\s.2\\S"))
(str_subset(counties, "\\s.2.\\,"))
(str_subset(counties, "\\,\\s.2.\\,"))
str_subset(counties, "\\,\\s.2.\\,")
str_subset(counties, "[..2]")
h_counties <- counties %>%
filter(str_detect(counties, "MA"))
filter(str_detect(counties, "h"))
View(h_counties)
str_subset(counties, "[\\d\\d2]")
h_counties <- counties %>%
filter(str_detect(counties, "MA"))
filter(str_detect(counties, "h\\D", ))
h_counties <- counties %>%
filter(str_detect(counties, "MA"))
filter(str_detect(counties, "h\\D" ))
str_detect(counties, "h\\D")
str_subset(counties, "h\\D")
h_counties <- counties %>%
filter(str_detect(counties, "MA"))
View(h_counties)
ma_counties <- counties %>%
filter(str_detect(counties, "MA"))
library(dplyr)
library(stringr)
# Note that I'm using data_frame() from the dplyr package to make my data.frame!
counties <- data_frame(counties = c('MA, 25, 001, Barnstable County, H1',
'MA, 25, 003, Berkshire County, H4',
'MA, 25, 005, Bristol County, H1',
'MA, 25, 007, Dukes County, H1',
'MA, 25, 009, Essex County, H4',
'MA, 25, 011, Franklin County, H4',
'MA, 25, 013, Hampden County, H4',
'MA, 25, 015, Hampshire County, H4',
'MA, 25, 017, Middlesex County, H4',
'MA, 25, 019, Nantucket County, H4',
'MA, 25, 021, Norfolk County, H1',
'MA, 25, 023, Plymouth County, H1',
'MA, 25, 025, Suffolk County, H4',
'MA, 25, 027, Worcester County, H4',
'VA, 51, 193, Westmoreland County, H1',
'VA, 51, 195, Wise County, H1',
'VA, 51, 197, Wythe County, H1',
'VA, 51, 199, York County, H1',
'VA, 51, 510, Alexandria city, C7',
'VA, 51, 515, Bedford city, C7',
'VA, 51, 520, Bristol city, C7',
'VA, 51, 530, Buena Vista city, C7',
'VA, 51, 540, Charlottesville city, C7',
'VA, 51, 550, Chesapeake city, C7',
'VA, 51, 570, Colonial Heights city, C7'
))
dna_seqs <- data_frame(seq =c('ATG CAA TGG GGA AAT GGT ACC AGG TCC GAA CTT AAT GAG GTA AGA CAG ATT TAA',
'A TGC AAT GGG GAA ATG TTA CCA GGT CCG AAC TTA TTG AGG TAA GAC AGA TTT AA',
'AT GCA ATG GGG AAA TGT TAC CAG GTC CGA ACT TAT TAA GGT AAG ACA GAT TTA A'
))
ma_counties <- counties %>%
filter(str_detect(counties, "MA"))
h_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties, "h"))
View(h_ma_counties)
h_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties, "h[^\\d]"))
h_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties, "h[^14]"))
h_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties, "h[\\D]"))
h_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties, "h\\D"))
h_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties, "h"))
h_ma_counties <- ma_counties %>%
filter(str_subset(ma_counties, "h"))
str_subset(ma_counties, "h")
str_subset(ma_counties, "h\\D")
str_subset(ma_counties, "h")
str_subset(ma_counties, "b")
View(ma_counties)
?str_subset
View(ma_counties)
str_subset(ma_counties$counties, "b")
h_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties$counties, "h"))
View(h_ma_counties)
h_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties$counties, "(h|H\\D"))
h_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties$counties, "(h|H\\D)")
h_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties$counties, "(h|H\\D)"))
h_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties$counties, "(h|H)[^\\d]"))
View(h_ma_counties)
str(ma_counties)
ma_counties <- data_frame(counties %>%
filter(str_detect(counties, "MA")))
ma_counties <- counties %>%
filter(str_detect(counties, "MA"))
View(ma_counties)
ma_counties <- counties %>%
filter(str_detect(counties, "MA")) %>%
filter(str_detect(ma_counties$counties, "(h|H)[^\\d]"))
View(counties)
#Using str_detect and filter, create a data frame with the massachusetts counties that contain the letter ‘h’ in their county name.
str(counties)
ma_counties <- counties %>%
filter(str_detect(counties, "MA")) %>%
filter(str_detect(counties, "(h|H)[^\\d]"))
ma_counties <- counties %>%
filter(str_detect(counties, "MA"))
h_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties$counties, "(h|H)[^\\d]"))
View(h_ma_counties)
num_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties$counties, "..2"))
View(num_ma_counties)
num_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties$counties, "[..2]"))
num_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties$counties, "(2..|.2.|..2)")
num_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties$counties, "(2..|.2.|..2)"))
num_ma_counties <-
filter(str_detect(ma_counties$counties, "(2..|.2.|..2)"))
num_ma_counties <-
filter(str_detect(ma_counties$counties, "2"))
num_ma_counties <-
filter(str_detect(counties, "2"))
num_ma_counties <-
filter(str_detect(ma_counties$counties, "2"))
num_ma_counties <- ma_counties %>%
filter(str_detect(counties, "b"))
View(num_ma_counties)
num_ma_counties <- ma_counties %>%
filter(str_detect(counties, "2"))
View(num_ma_counties)
num_ma_counties <- ma_counties %>%
filter(str_detect(counties, "\\S2"))
View(num_ma_counties)
num_ma_counties <- ma_counties %>%
filter(str_detect(counties, "[^\\s]2"))
View(num_ma_counties)
num_ma_counties <- ma_counties %>%
filter(str_detect(counties, "\\S2"))
View(num_ma_counties)
replace_counties <- counties %>%
str_replace(counties, "\\sCounty", "")
replace_counties <- counties %>%
str_replace("\\sCounty", "")
replace_counties
replace_counties <- counties %>%
str_replace_all("\\sCounty", "")
replace_counties
replace_counties <- counties %>%
str_replace_all("\\sCounty", "") %>%
str_replace_all("\\scity","")
replace_counties
replace_counties <- data.frame(counties %>%
str_replace_all("\\sCounty", "") %>%
str_replace_all("\\scity",""))
View(replace_counties)
replace_counties <- data.frame(counties = c(
str_replace_all("\\sCounty", "") %>%
str_replace_all("\\scity","")))
replace_counties <- counties %>%
str_replace_all("\\sCounty", "") %>%
str_replace_all("\\scity","")
replace_counties
str_subset(dna_seqs, "ATG.+(TAA|TAG|TGA")
str_subset(dna_seqs, "ATG.+(TAA|TAG|TGA)")
str_subset(dna_seqs, "\\sATG.+(TAA|TAG|TGA)\\s")
str_subset(dna_seqs, "\\sATG\\s.+\\s(TAA|TAG|TGA)\\s")
str_subset(dna_seqs$seq, "\\sATG\\s.+\\s(TAA|TAG|TGA)\\s")
str_subset(dna_seqs$seq, "ATG\\s.+(TAA|TAG|TGA)")
str_subset(dna_seqs$seq, "(ATG\\s).+(TAA|TAG|TGA)")
str_subset(dna_seqs$seq, "(ATG).+(TAA|TAG|TGA)")
str_replace(dna_seqs$seq, "ATG.+(TAA|TAG|TGA)")
str_replace(dna_seqs$seq,"............", "ATG.+(TAA|TAG|TGA)")
str_replace(dna_seqs$seq,"............", str_subset(dna_seqs$seq, "ATG.+(TAA|TAG|TGA)")
str_replace(dna_seqs$seq,"............", str_subset(dna_seqs$seq, "ATG.+(TAA|TAG|TGA)"))
str_replace(dna_seqs$seq,"", str_subset(dna_seqs$seq, "ATG.+(TAA|TAG|TGA)"))
str_view(dna_seqs$seq, "ATG.+(TAA|TAG|TGA)")
install.packages("htmlwidgets")
str_view(dna_seqs$seq, "ATG.+(TAA|TAG|TGA)")
replace_dna <- dna_seqs %>%
str_replace(".{1,}", str_subset(seq,"ATG.+(TAA|TAG|TGA)"))
replace_dna <- dna_seqs %>%
str_replace("."{1,}, str_subset(seq,"ATG.+(TAA|TAG|TGA)"))
replace_dna <- dna_seqs %>%
str_replace("."+, str_subset(seq,"ATG.+(TAA|TAG|TGA)"))
replace_dna <- dna_seqs %>%
str_replace(".+" , str_subset(seq,"ATG.+(TAA|TAG|TGA)"))
replace_dna <- dna_seqs %>%
str_replace(".+" , str_subset(dna_seq$seq,"ATG.+(TAA|TAG|TGA)"))
replace_dna <- dna_seqs %>%
str_replace(".+" , str_subset(dna_seqs$seq,"ATG.+(TAA|TAG|TGA)"))
replace_dna
View(dna_seqs)
str_view(dna_seqs$seq, "ATG.+(TAA|TAG|TGA)")
replace_dna <- dna_seqs %>%
str_replace(".+" , str_sub(str_subset(dna_seqs$seq,"ATG.+(TAA|TAG|TGA)")))
replace_dna
replace_dna <- dna_seqs %>%
str_replace(".+" , "ATG.+(TAA|TAG|TGA)")
replace_dna
library(dplyr)
library(stringr)
# Note that I'm using data_frame() from the dplyr package to make my data.frame!
counties <- data_frame(counties = c('MA, 25, 001, Barnstable County, H1',
'MA, 25, 003, Berkshire County, H4',
'MA, 25, 005, Bristol County, H1',
'MA, 25, 007, Dukes County, H1',
'MA, 25, 009, Essex County, H4',
'MA, 25, 011, Franklin County, H4',
'MA, 25, 013, Hampden County, H4',
'MA, 25, 015, Hampshire County, H4',
'MA, 25, 017, Middlesex County, H4',
'MA, 25, 019, Nantucket County, H4',
'MA, 25, 021, Norfolk County, H1',
'MA, 25, 023, Plymouth County, H1',
'MA, 25, 025, Suffolk County, H4',
'MA, 25, 027, Worcester County, H4',
'VA, 51, 193, Westmoreland County, H1',
'VA, 51, 195, Wise County, H1',
'VA, 51, 197, Wythe County, H1',
'VA, 51, 199, York County, H1',
'VA, 51, 510, Alexandria city, C7',
'VA, 51, 515, Bedford city, C7',
'VA, 51, 520, Bristol city, C7',
'VA, 51, 530, Buena Vista city, C7',
'VA, 51, 540, Charlottesville city, C7',
'VA, 51, 550, Chesapeake city, C7',
'VA, 51, 570, Colonial Heights city, C7'
))
dna_seqs <- data_frame(seq =c('ATG CAA TGG GGA AAT GGT ACC AGG TCC GAA CTT AAT GAG GTA AGA CAG ATT TAA',
'A TGC AAT GGG GAA ATG TTA CCA GGT CCG AAC TTA TTG AGG TAA GAC AGA TTT AA',
'AT GCA ATG GGG AAA TGT TAC CAG GTC CGA ACT TAT TAA GGT AAG ACA GAT TTA A'
))
#Using str_detect and filter, create a data frame with the massachusetts counties that contain the letter ‘h’ in their county name.
# only MA counties
ma_counties <- counties %>%
filter(str_detect(counties, "MA"))
#Only MA counties with h in name
h_ma_counties <- ma_counties %>%
filter(str_detect(ma_counties$counties, "(h|H)[^\\d]"))
View(h_ma_counties)
h_ma_counties <- counties %>%
filter(str_detect(counties, "MA")) %>%
filter(str_detect(ma_counties$counties, "(h|H)[^\\d]"))
ORF <- dna_seqs %>%
mutate(orf_seqs = str_replace_all(seqs, "(^.*)(ATG.*T(AA|AG|GA))(*.$)", "\\2"))
ORF <- dna_seqs %>%
mutate(orf_seqs = str_replace_all(seq, "(^.*)(ATG.*T(AA|AG|GA))(*.$)", "\\2"))
ORF <- dna_seqs %>%
mutate(orf_seqs = str_replace_all(seq, "(^.*)(ATG.*)(TAA|TAG|TGA))(*.$)", "\\2\\3"))
ORF <- dna_seqs %>%
mutate(orf_seqs = str_replace_all(seq, "(^.*)(ATG.*)(TAA|TAG|TGA)(*.$)", "\\2\\3"))
ORF <- dna_seqs %>%
mutate(orf_seqs = str_replace_all(seq, "(^.*)(ATG.*)(TAA|TAG|TGA)(.*$)", "\\2\\3"))
View(ORF)
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
library(blogdown)
serve_site()
setwd("~/bio-blog")
serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
